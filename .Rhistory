library(dplyr)
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
View(data)
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
xm <- xm.source[1:(T-4)]
#plot(xm, ylim = 100)
plot(xm, xaxt="n") #plot des données
#plot(xm, ylim = 100)
plot(xm, xaxt="n") #plot des données
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,244,12))
axis(side=1,at=seq(0,400,12)) #mettre les axes
par(mfrow=c(1,2))
acf(xm)
pacf(xm)
xm <- xm - mean(xm) #pour enlever la moyenne
par(mfrow=c(1,2))
acf(xm)
pacf(xm)
par(mfrow=c(1,2))
acf(xm)
pacf(xm)
dev.off()
pp.test(xm) #test de philippe perron ok, on rejette à 1% l'hypothèse que la série n'est pas stationnaire
#on enlève la saisonnalité apparente
xm <- xm-lag(xm,-12)
#on enlève la saisonnalité apparente
d <- xm-lag(xm,-12)
#on enlève la saisonnalité apparente
d <- xm-lag(xm,12)
#on enlève la saisonnalité apparente
d <- xm-lag(xm, -12)
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,400,12))
xm <- xm - mean(xm) #pour enlever la moyenne
plot(xm)
mean(xm)
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
xm <- xm.source[1:(T-4)]
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,400,12)) #pour mettre l'axe x
par(mfrow=c(1,2))
acf(xm)
pacf(xm)
#on enlève la saisonnalité apparente
d <- xm-lag(xm, -12)
#on enlève la saisonnalité apparente
d <- xm-lag(xm, 12)
lag(xm, 12)
lag(xm, 1)
lag(xm, 12)
lag(xm, 2)
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
xm <- xm.source[1:(T-100)]
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,300,12))
par(mfrow=c(1,2))
acf(xm)
pacf(xm) #saisonnalité apparente : saisonnalité de 12 donc annuelle
dev.off()
par(mfrow=c(1,2))
acf(xm)
pacf(xm)
#on enlève la saisonnalité apparente
d <- xm-lag(xm, 12)
View(data)
View(indice)
lag(xm, 3)
lag(xm, 4)
length(xm)
d <- numeric()
for (i in 1:length(xm)){
if (i%%12 !=0){
d[i] <- xm[i]}}
d <- zoo(d[[1]])
d <- numeric()
for (i in 1:length(xm)){
if (i%%12 !=0){
d[i] <- xm[i]}}
d <- zoo(d)
plot(d)
dev.off()
plot(d)
par(mfrow=c(1,2))
acf(xm)
pacf(xm)
#on enlève la saisonnalité apparente
test <- diff(xm, lag = 12)
plot(test)
par(mfrow=c(1,2))
acf(d)
acf(test)
pacf(test)
xm <- diff(xm, lag = 12)
plot(xm)
par(mfrow=c(1,2))
acf(xm)
pacf(xm) #la saisonnalité a bien disparu
pp.test(xm)
acf(xm)
pacf(xm)
#on retire la moyenne de xm
xm <- xm - mean(xm)
plot(xm)
dev.off()
plot(xm)
acf(xm)
pacf(xm)
arima_1 <- arima(xm, c(2,0,5))
arima_1
Box.test(arima4017$residuals, lag=6, type="Ljung-Box", fitdf=5) #
Box.test(arima_1$residuals, lag=6, type="Ljung-Box", fitdf=5) #
Box.test(arima_1$residuals, lag=12, type="Ljung-Box", fitdf=5) #
Box.test(arima_1$residuals, lag=1, type="Ljung-Box", fitdf=5)
Box.test(arima_1$residuals, lag=2, type="Ljung-Box", fitdf=5)
Box.test(arima_1$residuals, lag=6, type="Ljung-Box", fitdf=5)
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
xm <- xm.source[1:(T-100)] #pour faire de la prévision
mean(xm)
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,300,12)) #pour mettre l'axe x
#xm <- xm - mean(xm) #pour enlever la moyenne
par(mfrow=c(1,2))
acf(xm)
pacf(xm)
xm <- diff(xm, lag = 12)
plot(xm)
par(mfrow=c(1,2))
acf(xm)
pacf(xm)
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
xm <- xm.source[1:(T-100)] #pour faire de la prévision
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,300,12))
dev.off()
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,300,12))
xm <- diff(xm, lag = 12)
plot(xm)
plot(xm)
axis(side=1,at=seq(0,300,12))
dev.off()
plot(xm, xaxt="n")
axis(side=1,at=seq(0,300,12))
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
xm <- xm.source[1:(T-100)] #pour faire de la prévision
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,300,12)) #pour mettre l'axe x
#xm <- xm - mean(xm) #pour enlever la moyenne
par(mfrow=c(1,2))
acf(xm)
pacf(xm) #saisonnalité apparente : saisonnalité de 12 donc annuelle
dev.off()
#on enlève la saisonnalité apparente
xm <- diff(xm, lag = 12)
plot(xm, xaxt="n")
axis(side=1,at=seq(0,300,12))
par(mfrow=c(1,2))
acf(xm)
pacf(xm) #la saisonnalité a bien disparu sauf sur la pacf
pp.test(xm)
#deuxième saisonnalité?
xm_bis <- diff(xm, lag = 12)
plot(xm_bis)
acf(xm_bis)
pacf(xm_bis)
par(mfrow=c(1,2))
acf(xm_bis)
pacf(xm_bis)
#deuxième saisonnalité?
xm_bis <- diff(xm_bis, lag = 12)
par(mfrow=c(1,2))
acf(xm_bis)
pacf(xm_bis)
#deuxième saisonnalité?
xm_bis <- diff(xm_bis, lag = 12)
par(mfrow=c(1,2))
acf(xm_bis)
pacf(xm_bis)
#deuxième saisonnalité?
xm_bis <- diff(xm, lag = 1)
par(mfrow=c(1,2))
acf(xm_bis)
pacf(xm_bis)
#deuxième saisonnalité?
xm_bis <- diff(xm, lag = 2)
par(mfrow=c(1,2))
acf(xm_bis)
pacf(xm_bis)
xm_bis <- diff(xm, lag = 3)
#plot(xm_bis)
par(mfrow=c(1,2))
acf(xm_bis)
pacf(xm_bis)
xm_bis <- diff(xm, lag = 4)
#plot(xm_bis)
par(mfrow=c(1,2))
acf(xm_bis)
pacf(xm_bis)
acf(xm)
pacf(xm)
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
xm <- xm.source[1:(T-100)] #pour faire de la prévision
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,300,12)) #pour mettre l'axe x
#xm <- xm - mean(xm) #pour enlever la moyenne
par(mfrow=c(1,2))
acf(xm)
pacf(xm)
arima_1 <- arima(xm, c(2,0,5))
arima_1
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
xm <- xm.source[1:(T-100)] #pour faire de la prévision
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,300,12)) #pour mettre l'axe x
#xm <- xm - mean(xm) #pour enlever la moyenne
par(mfrow=c(1,2))
acf(xm)
pacf(xm) #saisonnalité apparente : saisonnalité de 12 donc annuelle
dev.off()
#on enlève la saisonnalité apparente
xm <- diff(xm, lag = 12)
plot(xm, xaxt="n")
axis(side=1,at=seq(0,300,12))
par(mfrow=c(1,2))
acf(xm)
pacf(xm) #la saisonnalité a bien disparu sauf sur la pacf
pp.test(xm) #test de philippe perron, on rejette à 1% l'hypothèse que la série n'est pas stationnaire
#au niveau acf : on voit qu'on rentre environ dans l'itv de confiance pour l'acf au lag 5 environ (donc on prend q = 4)
#au niveau pacf : on rentre complètement à p = 2 mais on ressort à p = 12
#dans les deux cas on ressort à p=12 même après différenciation ...
#deuxième saisonnalité?
#xm_bis <- diff(xm, lag = 12)
#plot(xm_bis)
#par(mfrow=c(1,2))
#acf(xm_bis)
#pacf(xm_bis)
#on retire la moyenne de xm
xm <- xm - mean(xm)
plot(xm)
acf(xm)
pacf(xm)
arima_1 <- arima(xm, c(2,0,5))
arima_1
Qtests <- function(series, k, fitdf=0) {
pvals <- apply(matrix(1:k), 1, FUN=function(l) {
pval <- if (l<=fitdf) NA else Box.test(series, lag=l, type="Ljung-Box", fitdf=fitdf)$p.value
return(c("lag"=l,"pval"=pval))
})
return(t(pvals))
}
Qtests(arima4017$residuals, 24, 5) #tests de LB pour les ordres 1 a 24
Qtests(arima_1$residuals, 24, 5) #tests de LB pour les ordres 1 a 24
round(Qtests(arima_1$residuals,24,fitdf=5),3)
signif <- function(estim){ #fonction de test des significations individuelles des coefficients
coef <- estim$coef
se <- sqrt(diag(estim$var.coef))
t <- coef/se
pval <- (1-pnorm(abs(t)))*2
return(rbind(coef,se,pval))
}
signif(arima_1)
forecast(arima_1,h=2)
library(forecast)
forecast(arima_1,h=2)
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
test <- tail(xm.source, n=100)
xm <- xm.source[1:(T-100)]
test
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,300,12)) #pour mettre l'axe x
#xm <- xm - mean(xm) #pour enlever la moyenne
par(mfrow=c(1,2))
acf(xm)
pacf(xm) #saisonnalité apparente : saisonnalité de 12 donc annuelle
dev.off()
#on enlève la saisonnalité apparente
xm <- diff(xm, lag = 12)
plot(xm, xaxt="n")
axis(side=1,at=seq(0,300,12))
par(mfrow=c(1,2))
acf(xm)
pacf(xm) #la saisonnalité a bien disparu sauf sur la pacf
pp.test(xm) #test de philippe perron, on rejette à 1% l'hypothèse que la série n'est pas stationnaire
#au niveau acf : on voit qu'on rentre environ dans l'itv de confiance pour l'acf au lag 5 environ (donc on prend q = 4)
#au niveau pacf : on rentre complètement à p = 2 mais on ressort à p = 12
#dans les deux cas on ressort à p=12 même après différenciation ...
#deuxième saisonnalité?
#xm_bis <- diff(xm, lag = 12)
#plot(xm_bis)
#par(mfrow=c(1,2))
#acf(xm_bis)
#pacf(xm_bis)
#on retire la moyenne de xm
xm <- xm - mean(xm)
plot(xm)
acf(xm)
pacf(xm)
arima_1 <- arima(xm, c(2,0,5))
arima_1
Box.test(arima_1$residuals, lag=6, type="Ljung-Box", fitdf=5)
Qtests <- function(series, k, fitdf=0) {
pvals <- apply(matrix(1:k), 1, FUN=function(l) {
pval <- if (l<=fitdf) NA else Box.test(series, lag=l, type="Ljung-Box", fitdf=fitdf)$p.value
return(c("lag"=l,"pval"=pval))
})
return(t(pvals))
}
Qtests(arima_1$residuals, 24, 5) #tests de LB pour les ordres 1 a 24
round(Qtests(arima_1$residuals,24,fitdf=5),3)
signif <- function(estim){ #fonction de test des significations individuelles des coefficients
coef <- estim$coef
se <- sqrt(diag(estim$var.coef))
t <- coef/se
pval <- (1-pnorm(abs(t)))*2
return(rbind(coef,se,pval))
}
signif(arima_1)
#prévision
library(forecast)
f <- forecast(arima_1,h=2)
f <- forecast(arima_1,h=2)
plot(xm, xlim=c(1, 300), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
dev.off()
plot(xm, xlim=c(1, 300), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
plot(xm, xlim=c(200, 300), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
plot(xm, xlim=c(200, 350), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
plot(xm, xlim=c(200, 350), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
f <- forecast(arima_1,h=100)
plot(xm, xlim=c(200, 300), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
f <- forecast(arima_1,h=100)
plot(xm, xlim=c(200, 350), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
f <- forecast(arima_1,h=100)
plot(xm, xlim=c(200, 350), ylim=c(min(xm), max(xm)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
f$upper
f$upper[2]
f$upper[:2]
f$upper[2:]
plot(xm, xlim=c(200, 350), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
#lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
f$mean
f <- forecast(arima_1,h=100)
plot(xm, xlim=c(300, 350), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
#lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
f <- forecast(arima_1,h=100)
plot(xm, xlim=c(290, 350), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
plot(xm)
plot(xm, xlim=c(290,350))
lines(f$mean, col='red')
plot(xm, xlim=c(250,350))
lines(f$mean, col='red')
lines(test)
test <- test - mean(xm)
test <- diff(test, lag=12)
plot(xm, xlim=c(250,350))
lines(test)
lines(f$mean, col='red')
plot(f$upper)
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
test <- tail(xm.source, n=100) #pour comparer nos prévisions avec les vraies données
xm <- xm.source[1:(T-100)]
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,300,12))
xm <- diff(xm, lag = 12)
plot(xm, xaxt="n")
axis(side=1,at=seq(0,300,12))
par(mfrow=c(1,2))
acf(xm)
data <- read.csv('valeurs_mensuelles_pesticides.csv', sep=";")
data <- data[2]
data <- as.data.frame(data[-(1:3),])#on enlève les premières lignes qui ne sont pas des données
indice <- as.data.frame(as.numeric(unlist(data)))
xm.source <- zoo(indice[[1]]) #convertit le premier element de data en serie temporelle de type "zoo"
T <- length(xm.source)
test <- tail(xm.source, n=112) #pour comparer nos prévisions avec les vraies données
xm <- xm.source[1:(T-100)] #pour le modèle
plot(xm, xaxt="n") #plot des données
axis(side=1,at=seq(0,300,12)) #pour mettre l'axe x
#xm <- xm - mean(xm) #pour enlever la moyenne
par(mfrow=c(1,2))
acf(xm)
pacf(xm) #saisonnalité apparente : saisonnalité de 12 donc annuelle
dev.off()
#on enlève la saisonnalité apparente
xm <- diff(xm, lag = 12)
plot(xm, xaxt="n")
axis(side=1,at=seq(0,300,12))
par(mfrow=c(1,2))
acf(xm)
pacf(xm) #la saisonnalité a bien disparu sauf sur la pacf
pp.test(xm) #test de philippe perron, on rejette à 1% l'hypothèse que la série n'est pas stationnaire
#au niveau acf : on voit qu'on rentre environ dans l'itv de confiance pour l'acf au lag 5 environ (donc on prend q = 4)
#au niveau pacf : on rentre complètement à p = 2 mais on ressort à p = 12
#dans les deux cas on ressort à p=12 même après différenciation ...
#deuxième saisonnalité?
#xm_bis <- diff(xm, lag = 12)
#plot(xm_bis)
#par(mfrow=c(1,2))
#acf(xm_bis)
#pacf(xm_bis)
#on retire la moyenne de xm
xm <- xm - mean(xm)
plot(xm)
acf(xm)
pacf(xm)
arima_1 <- arima(xm, c(2,0,5))
arima_1
Box.test(arima_1$residuals, lag=6, type="Ljung-Box", fitdf=5)
Qtests <- function(series, k, fitdf=0) {
pvals <- apply(matrix(1:k), 1, FUN=function(l) {
pval <- if (l<=fitdf) NA else Box.test(series, lag=l, type="Ljung-Box", fitdf=fitdf)$p.value
return(c("lag"=l,"pval"=pval))
})
return(t(pvals))
}
Qtests(arima_1$residuals, 24, 5) #tests de LB pour les ordres 1 a 24
round(Qtests(arima_1$residuals,24,fitdf=5),3)
signif <- function(estim){ #fonction de test des significations individuelles des coefficients
coef <- estim$coef
se <- sqrt(diag(estim$var.coef))
t <- coef/se
pval <- (1-pnorm(abs(t)))*2
return(rbind(coef,se,pval))
}
signif(arima_1)
#prévision
library(forecast)
f <- forecast(arima_1,h=100)
plot(xm, xlim=c(290, 350), ylim=c(min(xm), max(xm, f$upper)), xlab="Années", ylab="Valeur", main="Prévisions avec intervalle de confiance à 95%")
lines(f$mean, col="red")
lines(f$upper, col="blue", lty=2)
dev.off()
plot(xm, xlim=c(250,350))
lines(test)
test <- test - mean(xm)
test <- diff(test, lag=12)
#problème les indices ne collent pas + on ne voit pas les itvl de conf
plot(xm, xlim=c(250,350))
lines(test)
lines(f$mean, col='red')
plot(xm, xlim=c(250,350))
lines(test, col = 'blue')
lines(f$mean, col='red')
